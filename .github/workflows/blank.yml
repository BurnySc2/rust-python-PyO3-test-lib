on: [push]

#env:
#  # Could, potentially automatically parse
#  # the bin name, but let's do it automatically for now.
#  RELEASE_LIB: my_library
#
#  # Space separated paths to include in the archive.
#  # Start relative paths with a dot if you don't want
#  # paths to be preserved. Use "/" as a delimiter.
#  RELEASE_ADDS: README.md LICENSE


jobs:
  build:
    name: Build release

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
#        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [nightly]
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    # https://github.com/actions-rs/toolchain
    - uses: actions/checkout@v1

    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true

    - name: Run cargo check
      uses: actions-rs/cargo@v1
      with:
        command: check

    - name: Build
      run: cargo build --verbose --release

    - name: Create artifact directory
      run: mkdir artifacts

    - name: Create archive for Linux
      run: |
        sudo apt-get install tree
        tree target/release
        mv ./target/release/libmy_library.so ./artifacts/my_lib.so
#        7z a -ttar -so -an ./target/release/libmy_library.so ${{ env.RELEASE_ADDS }} | 7z a -si ./artifacts/${{ env.RELEASE_LIB }}-linux-x86_64.tar.gz
      if: matrix.os == 'ubuntu-latest'

    - name: Create archive for Windows
      run: |
        dir target/release
        move.py ${{ matrix.python-version }}
        move ./target/release/my_library.dll ./artifacts/my_lib.pyd
#        move ./target/release/my_library.dll ./artifacts/my_lib.cp${{}}.pyd
#        7z a -tzip ./artifacts/${{ env.RELEASE_LIB }}-windows-x86_64.zip ./target/release/my_library.dll
      if: matrix.os == 'windows-latest'

    # See - https://github.com/actions/upload-artifact/issues/39
    - uses: actions/upload-artifact@v1
      name: Upload archive
      with:
        name: ${{ matrix.os }}_python${{ matrix.python-version }}
        path: artifacts/